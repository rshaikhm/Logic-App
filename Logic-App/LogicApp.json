{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "office365_1_Connection_Name": {
      "type": "string",
      "defaultValue": "office365-3"
    },
    "office365_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "vermaf@pcscapital.com"
    },
    "sql_1_Connection_Name": {
      "type": "string",
      "defaultValue": "sql"
    },
    "sql_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "test"
    },
    "sql_1_server": {
      "type": "string",
      "metadata": {
        "description": "SQL server name"
      },
      "defaultValue": "pcs-sql-payroll360-qa.database.windows.net"
    },
    "sql_1_database": {
      "type": "string",
      "metadata": {
        "description": "SQL database name"
      },
      "defaultValue": "config-qa"
    },
    "sql_1_username": {
      "type": "securestring",
      "metadata": {
        "description": "Username credential"
      }
    },
    "sql_1_password": {
      "type": "securestring",
      "metadata": {
        "description": "Password credential"
      }
    },
    "sql_1_encryptConnection": {
      "type": "bool",
      "metadata": {
        "description": "Encrypt Connection"
      },
      "defaultValue": true
    },
    "sql_1_privacySetting": {
      "type": "string",
      "metadata": {
        "description": "Privacy Setting"
      },
      "defaultValue": "Organizational",
      "allowedValues": [
        "None",
        "Private",
        "Organizational",
        "Public"
      ]
    },
    "sql_1_sqlConnectionString": {
      "type": "securestring",
      "metadata": {
        "description": "SQL Connection String"
      }
    },
    "sql_2_Connection_Name": {
      "type": "string",
      "defaultValue": "sql-1"
    },
    "sql_2_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "ConfigConn"
    },
    "sql_2_server": {
      "type": "string",
      "metadata": {
        "description": "SQL server name"
      },
      "defaultValue": "pcs-sql-payroll360-qa.database.windows.net"
    },
    "sql_2_database": {
      "type": "string",
      "metadata": {
        "description": "SQL database name"
      },
      "defaultValue": "config-qa"
    },
    "sql_2_username": {
      "type": "securestring",
      "metadata": {
        "description": "Username credential"
      }
    },
    "sql_2_password": {
      "type": "securestring",
      "metadata": {
        "description": "Password credential"
      }
    },
    "sql_2_encryptConnection": {
      "type": "bool",
      "metadata": {
        "description": "Encrypt Connection"
      },
      "defaultValue": false
    },
    "sql_2_privacySetting": {
      "type": "string",
      "metadata": {
        "description": "Privacy Setting"
      },
      "defaultValue": "Organizational",
      "allowedValues": [
        "None",
        "Private",
        "Organizational",
        "Public"
      ]
    },
    "sql_2_sqlConnectionString": {
      "type": "securestring",
      "metadata": {
        "description": "SQL Connection String"
      }
    },
    "azureblob_1_Connection_Name": {
      "type": "string",
      "defaultValue": "azureblob-2"
    },
    "azureblob_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "ConnectToBlobDEV"
    },
    "azureblob_1_accountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account the connector should use."
      },
      "defaultValue": "stpayroll360001"
    },
    "azureblob_1_accessKey": {
      "type": "securestring",
      "metadata": {
        "description": "Specify a valid primary/secondary storage account access key."
      }
    },
    "azureblob_1_authType": {
      "type": "string",
      "metadata": {
        "description": "Authentication type to connect to your database"
      },
      "allowedValues": [
        "basic",
        "anonymous"
      ]
    },
    "azureblob_1_privacySetting": {
      "type": "string",
      "metadata": {
        "description": "Privacy Setting"
      },
      "allowedValues": [
        "None",
        "Private",
        "Organizational",
        "Public"
      ]
    },
    "LogicAppLocation": {
      "type": "string",
      "minLength": 1,
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2",
        "koreacentral",
        "koreasouth",
        "francecentral",
        "francesouth",
        "uaecentral",
        "uaenorth",
        "southafricanorth",
        "southafricawest",
        "switzerlandnorth",
        "switzerlandwest",
        "germanynorth",
        "germanywestcentral",
        "norwayeast",
        "brazilsoutheast"
      ],
      "defaultValue": "eastus"
    },
    "LogicAppName": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "pcs-la-email-payroll360-dev"
    }
  },
  "variables": {},
  "resources": [
    {
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_new_email_arrives": {
              "recurrence": {
                "frequency": "Second",
                "interval": 3
              },
              "splitOn": "@triggerBody()?['value']",
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['office365_1']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/Mail/OnNewEmail",
                "queries": {
                  "folderPath": "Inbox",
                  "importance": "Any",
                  "includeAttachments": true
                }
              }
            }
          },
          "actions": {
            "Condition_2": {
              "actions": {
                "For_each": {
                  "foreach": "@triggerBody()?['Attachments']",
                  "actions": {
                    "Condition": {
                      "actions": {
                        "Execute_stored_procedure_(V2)": {
                          "runAfter": {},
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['sql']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "FileName": "@items('For_each')?['Name']",
                              "FileType": 0
                            },
                            "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[SP_GetFileTpeIDFromFileName]'))}"
                          }
                        },
                        "For_each_3": {
                          "foreach": "@body('Get_rows_(V2)')?['value']",
                          "actions": {
                            "Create_blob_2": {
                              "runAfter": {
                                "Execute_stored_procedure_(V2)_2": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azureblob_1']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "body": "@base64ToBinary(items('For_each')?['ContentBytes'])",
                                "path": "/datasets/default/files",
                                "queries": {
                                  "folderPath": "@{toLower(body('Get_row_(V2)')?['destination_folder_path'])}",
                                  "name": "@items('For_each')?['Name']",
                                  "queryParametersSingleEncoded": true
                                }
                              },
                              "runtimeConfiguration": {
                                "contentTransfer": {
                                  "transferMode": "Chunked"
                                }
                              }
                            },
                            "Execute_stored_procedure_(V2)_2": {
                              "runAfter": {
                                "Get_row_(V2)": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['sql']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "body": {
                                  "FileName": "@items('For_each')?['Name']",
                                  "FromEmailId": "@triggerBody()?['From']"
                                },
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/procedures/@{encodeURIComponent(encodeURIComponent('[dbo].[SP_InsertStatusIntoFileReceived]'))}"
                              }
                            },
                            "Get_row_(V2)": {
                              "runAfter": {},
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['sql']['connectionId']"
                                  }
                                },
                                "method": "get",
                                "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[tbl_Destination_Setup]'))}/items/@{encodeURIComponent(encodeURIComponent(items('For_each_3')?['Destination_Setup_ID']))}"
                              }
                            }
                          },
                          "runAfter": {
                            "Get_rows_(V2)": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Get_rows_(V2)": {
                          "runAfter": {
                            "Execute_stored_procedure_(V2)": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['sql']['connectionId']"
                              }
                            },
                            "method": "get",
                            "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables/@{encodeURIComponent(encodeURIComponent('[dbo].[tbl_Inbound_Source_Setup]'))}/items",
                            "queries": {
                              "$filter": "FROM_EMAIL_ID eq '@{triggerBody()?['From']}'",
                              "$select": "DESTINATION_SETUP_ID"
                            }
                          }
                        }
                      },
                      "runAfter": {},
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@triggerBody()?['HasAttachment']",
                              true
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    }
                  },
                  "runAfter": {
                    "Get_tables_(V2)": [
                      "Succeeded"
                    ]
                  },
                  "type": "Foreach"
                },
                "Get_tables_(V2)": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['sql_1']['connectionId']"
                      }
                    },
                    "method": "get",
                    "path": "/v2/datasets/@{encodeURIComponent(encodeURIComponent('default'))},@{encodeURIComponent(encodeURIComponent('default'))}/tables"
                  }
                }
              },
              "runAfter": {},
              "else": {
                "actions": {
                  "HTTP": {
                    "runAfter": {},
                    "type": "Http",
                    "inputs": {
                      "method": "GET",
                      "uri": "https://pcs-app-payroll360-qa.azurewebsites.net/api/email/@{triggerBody()?['From']}"
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@triggerBody()?['HasAttachment']",
                      true
                    ]
                  }
                ]
              },
              "type": "If"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "sql": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'eastus', '/managedApis/', 'sql')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sql_1_Connection_Name'))]",
                "connectionName": "[parameters('sql_1_Connection_Name')]"
              },
              "azureblob_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'eastus', '/managedApis/', 'azureblob')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]",
                "connectionName": "[parameters('azureblob_1_Connection_Name')]"
              },
              "sql_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'eastus', '/managedApis/', 'sql')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('sql_2_Connection_Name'))]",
                "connectionName": "[parameters('sql_2_Connection_Name')]"
              },
              "office365_1": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'eastus', '/managedApis/', 'office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]",
                "connectionName": "[parameters('office365_1_Connection_Name')]"
              }
            }
          }
        }
      },
      "name": "[parameters('LogicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('LogicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('sql_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('azureblob_1_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('sql_2_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('office365_1_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('office365_1_Connection_Name')]",
      "location": "eastus",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'eastus', '/managedApis/', 'office365')]"
        },
        "displayName": "[parameters('office365_1_Connection_DisplayName')]"
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('sql_1_Connection_Name')]",
      "location": "eastus",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'eastus', '/managedApis/', 'sql')]"
        },
        "displayName": "[parameters('sql_1_Connection_DisplayName')]",
        "parameterValues": {
          "server": "[parameters('sql_1_server')]",
          "database": "[parameters('sql_1_database')]",
          "username": "[parameters('sql_1_username')]",
          "password": "[parameters('sql_1_password')]",
          "encryptConnection": "[parameters('sql_1_encryptConnection')]",
          "privacySetting": "[parameters('sql_1_privacySetting')]",
          "sqlConnectionString": "[parameters('sql_1_sqlConnectionString')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('sql_2_Connection_Name')]",
      "location": "eastus",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'eastus', '/managedApis/', 'sql')]"
        },
        "displayName": "[parameters('sql_2_Connection_DisplayName')]",
        "parameterValues": {
          "server": "[parameters('sql_2_server')]",
          "database": "[parameters('sql_2_database')]",
          "username": "[parameters('sql_2_username')]",
          "password": "[parameters('sql_2_password')]",
          "encryptConnection": "[parameters('sql_2_encryptConnection')]",
          "privacySetting": "[parameters('sql_2_privacySetting')]",
          "sqlConnectionString": "[parameters('sql_2_sqlConnectionString')]"
        }
      }
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2018-07-01-preview",
      "name": "[parameters('azureblob_1_Connection_Name')]",
      "location": "eastus",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', 'eastus', '/managedApis/', 'azureblob')]"
        },
        "displayName": "[parameters('azureblob_1_Connection_DisplayName')]",
        "parameterValues": {
          "accountName": "[parameters('azureblob_1_accountName')]",
          "accessKey": "[parameters('azureblob_1_accessKey')]",
          "authType": "[parameters('azureblob_1_authType')]",
          "privacySetting": "[parameters('azureblob_1_privacySetting')]"
        }
      }
    }
  ],
  "outputs": {}
}